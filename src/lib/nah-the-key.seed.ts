// This file is generated by src/scripts/build-seed-from-shop.ts
import type { HouseId, HouseInfo, PricingConfig } from "./nah-the-key.types";

export const HOUSE_TABLE: Record<HouseId, HouseInfo> = {
  AOSHIMA_EXCLUSIVE: {
    id: "AOSHIMA_EXCLUSIVE",
    displayName: "AOSHIMA MASTERPIECE（EXCLUSIVE相当）",
    area: "AOSHIMA",
    capacity: {
      standard: 4,
      max: 8,
      coSleepingMax: 2,
    },
    baselinePerNightJpy: 450000,
    officialUrl: "https://notahotel.com/shop/aoshima/garden",
    officialThumbUrl:
      "https://notahotel.com/assets/images/ogp/shop/aoshima-garden_ogp.jpg",
  },
  BASE_S_KITA_KARUIZAWA: {
    id: "BASE_S_KITA_KARUIZAWA",
    displayName: "BASE S 北軽井沢",
    area: "KITA_KARUIZAWA",
    capacity: {
      standard: 2,
      max: 2,
      coSleepingMax: 2,
    },
    baselinePerNightJpy: 120000,
    officialUrl: "https://notahotel.com/shop/kitakaruizawa/base-s",
    officialThumbUrl:
      "https://notahotel.com/assets/images/ogp/shop/kitakaruizawa-base-s_ogp.v2.jpg",
  },
  "+ATELIER_FUKUOKA": {
    id: "+ATELIER_FUKUOKA",
    displayName: "+ATELIER FUKUOKA",
    area: "FUKUOKA",
    capacity: {
      standard: 4,
      max: 8,
      coSleepingMax: 2,
    },
    baselinePerNightJpy: 180000,
    officialUrl: "https://notahotel.com/shop/fukuoka/atelier",
    officialThumbUrl:
      "https://notahotel.com/assets/images/ogp/shop/fukuoka-atelier_ogp.jpg",
  },
  "+CHEF_FUKUOKA": {
    id: "+CHEF_FUKUOKA",
    displayName: "+CHEF FUKUOKA",
    area: "FUKUOKA",
    capacity: {
      standard: 4,
      max: 8,
      coSleepingMax: 2,
    },
    baselinePerNightJpy: 180000,
    officialUrl: "https://notahotel.com/shop/fukuoka/chef",
    officialThumbUrl:
      "https://notahotel.com/assets/images/ogp/shop/fukuoka-chef_ogp.jpg",
  },
  "+DESK_FUKUOKA": {
    id: "+DESK_FUKUOKA",
    displayName: "+DESK FUKUOKA",
    area: "FUKUOKA",
    capacity: {
      standard: 4,
      max: 8,
      coSleepingMax: 2,
    },
    baselinePerNightJpy: 180000,
    officialUrl: "https://notahotel.com/shop/fukuoka/desk",
    officialThumbUrl:
      "https://notahotel.com/assets/images/ogp/shop/fukuoka-desk_ogp.jpg",
  },
};

export const DEFAULT_PRICING_CONFIG: PricingConfig = {
  ethJpy: 660000,
  monthFactor: {
    FUKUOKA: {
      "1": 0.9,
      "2": 0.9,
      "3": 1,
      "4": 1.05,
      "5": 1.1,
      "6": 1,
      "7": 1.05,
      "8": 1.05,
      "9": 1.05,
      "10": 1.1,
      "11": 1,
      "12": 0.95,
    },
    KITA_KARUIZAWA: {
      "1": 1,
      "2": 1,
      "3": 0.95,
      "4": 1,
      "5": 1.05,
      "6": 1,
      "7": 1.3,
      "8": 1.3,
      "9": 1.1,
      "10": 1.2,
      "11": 0.95,
      "12": 0.95,
    },
    AOSHIMA: {
      "1": 1,
      "2": 1,
      "3": 1,
      "4": 1.05,
      "5": 1.1,
      "6": 1.1,
      "7": 1.2,
      "8": 1.2,
      "9": 1.1,
      "10": 1.1,
      "11": 1,
      "12": 1,
    },
  },
  dowFactor: {
    Mon: 0.9,
    Tue: 0.9,
    Wed: 0.95,
    Thu: 1,
    Fri: 1.15,
    Sat: 1.25,
    Sun: 1.05,
  },
  longStayFactor: {
    "1": 1,
    "2": 0.95,
    "3": 0.9,
  },
  leadtimeFactor: [
    {
      days_lt: 7,
      factor: 0.8,
    },
    {
      days_lt: 14,
      factor: 0.9,
    },
    {
      days_lt: 30,
      factor: 0.95,
    },
    {
      days_lt: 365,
      factor: 1,
    },
  ],
} as PricingConfig;

// ===== helper: 公式ページからOG画像を解決 =====
export async function resolveOgImage(url: string): Promise<string | undefined> {
  const res = await fetch(url, {
    headers: { "User-Agent": "Mozilla/5.0 (+https://github.com/whatwg/fetch)" },
  });
  const html = await res.text();
  const m =
    html.match(
      /<meta[^>]+property=["']og:image["'][^>]+content=["']([^"']+)["']/i,
    ) ||
    html.match(
      /<meta[^>]+name=["']twitter:image["'][^>]+content=["']([^"']+)["']/i,
    );
  return m?.[1];
}

/** サムネ未設定の項目にOG画像URLを流し込む */
export async function hydrateThumbnails(
  table: Record<HouseId, HouseInfo> = HOUSE_TABLE,
) {
  const ids = Object.keys(table) as HouseId[];
  for (const id of ids) {
    const item = table[id];
    if (!item.officialThumbUrl) {
      try {
        const og = await resolveOgImage(item.officialUrl);
        if (og) item.officialThumbUrl = og;
      } catch {
        // ignore
      }
    }
  }
  return table;
}
